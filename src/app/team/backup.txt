'use client';
import React from 'react';
import Tilt from 'react-parallax-tilt';
import { FaInstagram, FaTelegram } from 'react-icons/fa';
import TargetCursor from '../../../ani/TargetCursor/TargetCursor';

const profiles = [
  {
    name: "Vinayak Gupta",
    title: "Head of Department, Creative Design",
    handle: "vinayakgupta3110",
    status: "Online",
    avatarUrl: "images/Vinayak.png",
    instagramUrl: "https://instagram.com/vinayakgupta3110",
  },
  {
    name: "Tejaswa Pratap",
    title: "Head of Department, Programming",
    handle: "tejaswapratap31",
    status: "Online",
    avatarUrl: "images/Tejaswa.png",
    instagramUrl: "https://instagram.com/tejaswapratap31",
  },
  {
    name: "Panini Rao",
    title: "Head of Department, Product Pitching",
    handle: "panini.2302",
    status: "Online",
    avatarUrl: "images/Panini.png",
    instagramUrl: "https://instagram.com/panini.2302",
  },
  {
    name: "Reeva Sachdev",
    title: "Head of Department, AI & ML",
    handle: "reeva1.7",
    status: "Online",
    avatarUrl: "images/Reeva.jpg",
    instagramUrl: "https://instagram.com/reeva1.7",
  },
  {
    name: "Shreya Mathur",
    title: "Head of Department, Marketing",
    handle: "shreyaaa_mathur",
    status: "Online",
    avatarUrl: "images/test.jpg",
    instagramUrl: "https://instagram.com/shreyaaa_mathur",
  },
  {
    name: "Aarnav Lokesh",
    title: "Web Developer, UI/UX Designer",
    handle: "jumprfit",
    status: "Online",
    avatarUrl: "images/test.jpg",
    telegramUrl: "https://t.me/jumprfit",
  },
];

function ProfileCard({ profile }) {
  const isTelegramUser = profile.handle === "jumprfit";
  const IconComponent = isTelegramUser ? FaTelegram : FaInstagram;
  const contactUrl = isTelegramUser ? profile.telegramUrl : profile.instagramUrl;

  return (
    <Tilt
      glareEnable={true}
      glareMaxOpacity={0.2}
      glareColor="#ffffff"
      glarePosition="all"
      tiltMaxAngleX={15}
      tiltMaxAngleY={15}
      scale={1.05}
      transitionSpeed={250}
      className="max-w-sm mx-auto rounded-lg cursor-pointer min-h-[450px]"
      tiltReverse={false}
      perspective={1000}
      onClick={() => {}}
    >
      <div
        className="
          bg-white/70 dark:bg-gray-800/70
          shadow-md dark:shadow-gray-700
          rounded-lg overflow-hidden
          transition-shadow duration-300
          cursor-target cursor-none
          flex flex-col h-full
        "
      >
        <img
          className="w-full h-56 object-cover flex-shrink-0"
          src={profile.avatarUrl || "/images/test.jpg"}
          alt={profile.name}
        />
        <div className="py-4 px-6 flex-1 flex flex-col justify-between">
          <div>
            <h2 className="text-2xl font-semibold text-gray-800 dark:text-gray-100">
              {profile.name}
            </h2>
            <p className="text-gray-600 dark:text-gray-300 mt-1">{profile.title}</p>
            <p
              className={`mt-1 font-medium ${
                profile.status === "Online" ? "text-green-500" : "text-red-500"
              }`}
            >
              {profile.status}
            </p>
            <p className="mt-2 text-purple-600 dark:text-purple-400 font-semibold flex items-center gap-2">
              <IconComponent className="inline text-lg" />
              {profile.handle}
            </p>
          </div>
          <a
            href={contactUrl}
            target="_blank"
            rel="noopener noreferrer"
            className="
              cursor-target cursor-none mt-4 bg-purple-500 text-white px-4 py-2 rounded
              hover:bg-purple-600 focus:outline-none
              dark:bg-purple-600 dark:hover:bg-purple-700
              self-start inline-block text-center
            "
            onClick={(e) => e.stopPropagation()}
          >
            Contact Me
          </a>
        </div>
      </div>
    </Tilt>
  );
}

export default function ProfilePage() {
  return (
    <>
      <h1 className="py-16 text-6xl text-purple-500 font-extrabold text-center mb-8">
        Our Team
      </h1>

      <section
        style={{
          width: "100%",
          display: "flex",
          justifyContent: "center",
          padding: "0 20px 40px",
          boxSizing: "border-box",
        }}
      >
        <div
          className="profile-grid"
          style={{
            display: "grid",
            gridTemplateColumns: "repeat(3, minmax(0, 1fr))",
            gap: "80px",
            maxWidth: "1200px",
            width: "100%",
            boxSizing: "border-box",
            margin: "0 auto",
            alignItems: "stretch",
          }}
        >
          {profiles.map((profile, i) => (
            <ProfileCard key={i} profile={profile} />
          ))}
        </div>
      </section>

      <style jsx>{`
        .profile-grid {
          /* gap handled inline */
        }
        @media (max-width: 900px) {
          .profile-grid {
            grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
            gap: 60px !important;
          }
        }
        @media (max-width: 600px) {
          .profile-grid {
            grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
            gap: 30px !important;
            max-width: 400px !important;
            margin-left: auto !important;
            margin-right: auto !important;
            padding-left: 20px !important;
            padding-right: 20px !important;
            box-sizing: border-box !important;
          }
        }
      `}</style>
    </>
  );
}
